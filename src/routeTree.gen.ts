/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as InviteInvitationIdRouteImport } from './routes/invite.$invitationId'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as AuthenticatedTeamRouteImport } from './routes/_authenticated/team'
import { Route as AuthenticatedSuperadminRouteImport } from './routes/_authenticated/superadmin'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedSelectOrganizationRouteImport } from './routes/_authenticated/select-organization'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedOnboardingRouteImport } from './routes/_authenticated/onboarding'
import { Route as AuthenticatedConnectionsRouteImport } from './routes/_authenticated/connections'
import { Route as AuthenticatedChatDemoRouteImport } from './routes/_authenticated/chat-demo'
import { Route as AuthenticatedBillingRouteImport } from './routes/_authenticated/billing'
import { Route as AuthenticatedSuperadminIndexRouteImport } from './routes/_authenticated/superadmin/index'
import { Route as AuthenticatedSuperadminWorkspacesRouteImport } from './routes/_authenticated/superadmin/workspaces'
import { Route as AuthenticatedSuperadminUsersRouteImport } from './routes/_authenticated/superadmin/users'
import { Route as AuthenticatedAgentsNewRouteImport } from './routes/_authenticated/agents.new'
import { Route as AuthenticatedTodosIdEditRouteImport } from './routes/_authenticated/todos.$id.edit'
import { Route as AuthenticatedAgentsAgentIdEditRouteImport } from './routes/_authenticated/agents.$agentId.edit'
import { Route as AuthenticatedAgentsAgentIdChatRouteImport } from './routes/_authenticated/agents.$agentId.chat'
import { ServerRoute as ApiProcessDocumentServerRouteImport } from './routes/api/process-document'
import { ServerRoute as ApiHealthServerRouteImport } from './routes/api/health'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api/chat'
import { ServerRoute as ApiStripeWebhookServerRouteImport } from './routes/api/stripe/webhook'
import { ServerRoute as ApiAvatarsUploadServerRouteImport } from './routes/api/avatars/upload'
import { ServerRoute as ApiAvatarsDeleteServerRouteImport } from './routes/api/avatars/delete'
import { ServerRoute as ApiAvatarsSplatServerRouteImport } from './routes/api/avatars/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'
import { ServerRoute as ApiToolsHubspotCompleteServerRouteImport } from './routes/api/tools.hubspot.complete'
import { ServerRoute as ApiToolsHubspotCallbackServerRouteImport } from './routes/api/tools.hubspot.callback'
import { ServerRoute as ApiToolsGoogleCompleteServerRouteImport } from './routes/api/tools.google.complete'
import { ServerRoute as ApiToolsGoogleCallbackServerRouteImport } from './routes/api/tools.google.callback'
import { ServerRoute as ApiAgentsAgentIdChatServerRouteImport } from './routes/api/agents.$agentId.chat'

const rootServerRouteImport = createServerRootRoute()

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const InviteInvitationIdRoute = InviteInvitationIdRouteImport.update({
  id: '/invite/$invitationId',
  path: '/invite/$invitationId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedTeamRoute = AuthenticatedTeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSuperadminRoute = AuthenticatedSuperadminRouteImport.update({
  id: '/superadmin',
  path: '/superadmin',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSelectOrganizationRoute =
  AuthenticatedSelectOrganizationRouteImport.update({
    id: '/select-organization',
    path: '/select-organization',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedOnboardingRoute = AuthenticatedOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedConnectionsRoute =
  AuthenticatedConnectionsRouteImport.update({
    id: '/connections',
    path: '/connections',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedChatDemoRoute = AuthenticatedChatDemoRouteImport.update({
  id: '/chat-demo',
  path: '/chat-demo',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedBillingRoute = AuthenticatedBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSuperadminIndexRoute =
  AuthenticatedSuperadminIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSuperadminRoute,
  } as any)
const AuthenticatedSuperadminWorkspacesRoute =
  AuthenticatedSuperadminWorkspacesRouteImport.update({
    id: '/workspaces',
    path: '/workspaces',
    getParentRoute: () => AuthenticatedSuperadminRoute,
  } as any)
const AuthenticatedSuperadminUsersRoute =
  AuthenticatedSuperadminUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => AuthenticatedSuperadminRoute,
  } as any)
const AuthenticatedAgentsNewRoute = AuthenticatedAgentsNewRouteImport.update({
  id: '/agents/new',
  path: '/agents/new',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedTodosIdEditRoute =
  AuthenticatedTodosIdEditRouteImport.update({
    id: '/todos/$id/edit',
    path: '/todos/$id/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAgentsAgentIdEditRoute =
  AuthenticatedAgentsAgentIdEditRouteImport.update({
    id: '/agents/$agentId/edit',
    path: '/agents/$agentId/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedAgentsAgentIdChatRoute =
  AuthenticatedAgentsAgentIdChatRouteImport.update({
    id: '/agents/$agentId/chat',
    path: '/agents/$agentId/chat',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const ApiProcessDocumentServerRoute =
  ApiProcessDocumentServerRouteImport.update({
    id: '/api/process-document',
    path: '/api/process-document',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiHealthServerRoute = ApiHealthServerRouteImport.update({
  id: '/api/health',
  path: '/api/health',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStripeWebhookServerRoute = ApiStripeWebhookServerRouteImport.update({
  id: '/api/stripe/webhook',
  path: '/api/stripe/webhook',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsUploadServerRoute = ApiAvatarsUploadServerRouteImport.update({
  id: '/api/avatars/upload',
  path: '/api/avatars/upload',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsDeleteServerRoute = ApiAvatarsDeleteServerRouteImport.update({
  id: '/api/avatars/delete',
  path: '/api/avatars/delete',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAvatarsSplatServerRoute = ApiAvatarsSplatServerRouteImport.update({
  id: '/api/avatars/$',
  path: '/api/avatars/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiToolsHubspotCompleteServerRoute =
  ApiToolsHubspotCompleteServerRouteImport.update({
    id: '/api/tools/hubspot/complete',
    path: '/api/tools/hubspot/complete',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiToolsHubspotCallbackServerRoute =
  ApiToolsHubspotCallbackServerRouteImport.update({
    id: '/api/tools/hubspot/callback',
    path: '/api/tools/hubspot/callback',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiToolsGoogleCompleteServerRoute =
  ApiToolsGoogleCompleteServerRouteImport.update({
    id: '/api/tools/google/complete',
    path: '/api/tools/google/complete',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiToolsGoogleCallbackServerRoute =
  ApiToolsGoogleCallbackServerRouteImport.update({
    id: '/api/tools/google/callback',
    path: '/api/tools/google/callback',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAgentsAgentIdChatServerRoute =
  ApiAgentsAgentIdChatServerRouteImport.update({
    id: '/api/agents/$agentId/chat',
    path: '/api/agents/$agentId/chat',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/billing': typeof AuthenticatedBillingRoute
  '/chat-demo': typeof AuthenticatedChatDemoRoute
  '/connections': typeof AuthenticatedConnectionsRoute
  '/onboarding': typeof AuthenticatedOnboardingRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/select-organization': typeof AuthenticatedSelectOrganizationRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/superadmin': typeof AuthenticatedSuperadminRouteWithChildren
  '/team': typeof AuthenticatedTeamRoute
  '/auth/signin': typeof AuthSigninRoute
  '/invite/$invitationId': typeof InviteInvitationIdRoute
  '/': typeof AuthenticatedIndexRoute
  '/agents/new': typeof AuthenticatedAgentsNewRoute
  '/superadmin/users': typeof AuthenticatedSuperadminUsersRoute
  '/superadmin/workspaces': typeof AuthenticatedSuperadminWorkspacesRoute
  '/superadmin/': typeof AuthenticatedSuperadminIndexRoute
  '/agents/$agentId/chat': typeof AuthenticatedAgentsAgentIdChatRoute
  '/agents/$agentId/edit': typeof AuthenticatedAgentsAgentIdEditRoute
  '/todos/$id/edit': typeof AuthenticatedTodosIdEditRoute
}
export interface FileRoutesByTo {
  '/billing': typeof AuthenticatedBillingRoute
  '/chat-demo': typeof AuthenticatedChatDemoRoute
  '/connections': typeof AuthenticatedConnectionsRoute
  '/onboarding': typeof AuthenticatedOnboardingRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/select-organization': typeof AuthenticatedSelectOrganizationRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/team': typeof AuthenticatedTeamRoute
  '/auth/signin': typeof AuthSigninRoute
  '/invite/$invitationId': typeof InviteInvitationIdRoute
  '/': typeof AuthenticatedIndexRoute
  '/agents/new': typeof AuthenticatedAgentsNewRoute
  '/superadmin/users': typeof AuthenticatedSuperadminUsersRoute
  '/superadmin/workspaces': typeof AuthenticatedSuperadminWorkspacesRoute
  '/superadmin': typeof AuthenticatedSuperadminIndexRoute
  '/agents/$agentId/chat': typeof AuthenticatedAgentsAgentIdChatRoute
  '/agents/$agentId/edit': typeof AuthenticatedAgentsAgentIdEditRoute
  '/todos/$id/edit': typeof AuthenticatedTodosIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/billing': typeof AuthenticatedBillingRoute
  '/_authenticated/chat-demo': typeof AuthenticatedChatDemoRoute
  '/_authenticated/connections': typeof AuthenticatedConnectionsRoute
  '/_authenticated/onboarding': typeof AuthenticatedOnboardingRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/select-organization': typeof AuthenticatedSelectOrganizationRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/superadmin': typeof AuthenticatedSuperadminRouteWithChildren
  '/_authenticated/team': typeof AuthenticatedTeamRoute
  '/auth/signin': typeof AuthSigninRoute
  '/invite/$invitationId': typeof InviteInvitationIdRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/agents/new': typeof AuthenticatedAgentsNewRoute
  '/_authenticated/superadmin/users': typeof AuthenticatedSuperadminUsersRoute
  '/_authenticated/superadmin/workspaces': typeof AuthenticatedSuperadminWorkspacesRoute
  '/_authenticated/superadmin/': typeof AuthenticatedSuperadminIndexRoute
  '/_authenticated/agents/$agentId/chat': typeof AuthenticatedAgentsAgentIdChatRoute
  '/_authenticated/agents/$agentId/edit': typeof AuthenticatedAgentsAgentIdEditRoute
  '/_authenticated/todos/$id/edit': typeof AuthenticatedTodosIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/billing'
    | '/chat-demo'
    | '/connections'
    | '/onboarding'
    | '/profile'
    | '/select-organization'
    | '/settings'
    | '/superadmin'
    | '/team'
    | '/auth/signin'
    | '/invite/$invitationId'
    | '/'
    | '/agents/new'
    | '/superadmin/users'
    | '/superadmin/workspaces'
    | '/superadmin/'
    | '/agents/$agentId/chat'
    | '/agents/$agentId/edit'
    | '/todos/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/billing'
    | '/chat-demo'
    | '/connections'
    | '/onboarding'
    | '/profile'
    | '/select-organization'
    | '/settings'
    | '/team'
    | '/auth/signin'
    | '/invite/$invitationId'
    | '/'
    | '/agents/new'
    | '/superadmin/users'
    | '/superadmin/workspaces'
    | '/superadmin'
    | '/agents/$agentId/chat'
    | '/agents/$agentId/edit'
    | '/todos/$id/edit'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/billing'
    | '/_authenticated/chat-demo'
    | '/_authenticated/connections'
    | '/_authenticated/onboarding'
    | '/_authenticated/profile'
    | '/_authenticated/select-organization'
    | '/_authenticated/settings'
    | '/_authenticated/superadmin'
    | '/_authenticated/team'
    | '/auth/signin'
    | '/invite/$invitationId'
    | '/_authenticated/'
    | '/_authenticated/agents/new'
    | '/_authenticated/superadmin/users'
    | '/_authenticated/superadmin/workspaces'
    | '/_authenticated/superadmin/'
    | '/_authenticated/agents/$agentId/chat'
    | '/_authenticated/agents/$agentId/edit'
    | '/_authenticated/todos/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
  InviteInvitationIdRoute: typeof InviteInvitationIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRoute
  '/api/health': typeof ApiHealthServerRoute
  '/api/process-document': typeof ApiProcessDocumentServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/agents/$agentId/chat': typeof ApiAgentsAgentIdChatServerRoute
  '/api/tools/google/callback': typeof ApiToolsGoogleCallbackServerRoute
  '/api/tools/google/complete': typeof ApiToolsGoogleCompleteServerRoute
  '/api/tools/hubspot/callback': typeof ApiToolsHubspotCallbackServerRoute
  '/api/tools/hubspot/complete': typeof ApiToolsHubspotCompleteServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRoute
  '/api/health': typeof ApiHealthServerRoute
  '/api/process-document': typeof ApiProcessDocumentServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/agents/$agentId/chat': typeof ApiAgentsAgentIdChatServerRoute
  '/api/tools/google/callback': typeof ApiToolsGoogleCallbackServerRoute
  '/api/tools/google/complete': typeof ApiToolsGoogleCompleteServerRoute
  '/api/tools/hubspot/callback': typeof ApiToolsHubspotCallbackServerRoute
  '/api/tools/hubspot/complete': typeof ApiToolsHubspotCompleteServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRoute
  '/api/health': typeof ApiHealthServerRoute
  '/api/process-document': typeof ApiProcessDocumentServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/avatars/$': typeof ApiAvatarsSplatServerRoute
  '/api/avatars/delete': typeof ApiAvatarsDeleteServerRoute
  '/api/avatars/upload': typeof ApiAvatarsUploadServerRoute
  '/api/stripe/webhook': typeof ApiStripeWebhookServerRoute
  '/api/agents/$agentId/chat': typeof ApiAgentsAgentIdChatServerRoute
  '/api/tools/google/callback': typeof ApiToolsGoogleCallbackServerRoute
  '/api/tools/google/complete': typeof ApiToolsGoogleCompleteServerRoute
  '/api/tools/hubspot/callback': typeof ApiToolsHubspotCallbackServerRoute
  '/api/tools/hubspot/complete': typeof ApiToolsHubspotCompleteServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/chat'
    | '/api/health'
    | '/api/process-document'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/stripe/webhook'
    | '/api/agents/$agentId/chat'
    | '/api/tools/google/callback'
    | '/api/tools/google/complete'
    | '/api/tools/hubspot/callback'
    | '/api/tools/hubspot/complete'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/chat'
    | '/api/health'
    | '/api/process-document'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/stripe/webhook'
    | '/api/agents/$agentId/chat'
    | '/api/tools/google/callback'
    | '/api/tools/google/complete'
    | '/api/tools/hubspot/callback'
    | '/api/tools/hubspot/complete'
  id:
    | '__root__'
    | '/api/chat'
    | '/api/health'
    | '/api/process-document'
    | '/api/auth/$'
    | '/api/avatars/$'
    | '/api/avatars/delete'
    | '/api/avatars/upload'
    | '/api/stripe/webhook'
    | '/api/agents/$agentId/chat'
    | '/api/tools/google/callback'
    | '/api/tools/google/complete'
    | '/api/tools/hubspot/callback'
    | '/api/tools/hubspot/complete'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRoute
  ApiHealthServerRoute: typeof ApiHealthServerRoute
  ApiProcessDocumentServerRoute: typeof ApiProcessDocumentServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiAvatarsSplatServerRoute: typeof ApiAvatarsSplatServerRoute
  ApiAvatarsDeleteServerRoute: typeof ApiAvatarsDeleteServerRoute
  ApiAvatarsUploadServerRoute: typeof ApiAvatarsUploadServerRoute
  ApiStripeWebhookServerRoute: typeof ApiStripeWebhookServerRoute
  ApiAgentsAgentIdChatServerRoute: typeof ApiAgentsAgentIdChatServerRoute
  ApiToolsGoogleCallbackServerRoute: typeof ApiToolsGoogleCallbackServerRoute
  ApiToolsGoogleCompleteServerRoute: typeof ApiToolsGoogleCompleteServerRoute
  ApiToolsHubspotCallbackServerRoute: typeof ApiToolsHubspotCallbackServerRoute
  ApiToolsHubspotCompleteServerRoute: typeof ApiToolsHubspotCompleteServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/invite/$invitationId': {
      id: '/invite/$invitationId'
      path: '/invite/$invitationId'
      fullPath: '/invite/$invitationId'
      preLoaderRoute: typeof InviteInvitationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/team': {
      id: '/_authenticated/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof AuthenticatedTeamRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/superadmin': {
      id: '/_authenticated/superadmin'
      path: '/superadmin'
      fullPath: '/superadmin'
      preLoaderRoute: typeof AuthenticatedSuperadminRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/select-organization': {
      id: '/_authenticated/select-organization'
      path: '/select-organization'
      fullPath: '/select-organization'
      preLoaderRoute: typeof AuthenticatedSelectOrganizationRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/onboarding': {
      id: '/_authenticated/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthenticatedOnboardingRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/connections': {
      id: '/_authenticated/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof AuthenticatedConnectionsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/chat-demo': {
      id: '/_authenticated/chat-demo'
      path: '/chat-demo'
      fullPath: '/chat-demo'
      preLoaderRoute: typeof AuthenticatedChatDemoRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/billing': {
      id: '/_authenticated/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthenticatedBillingRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/superadmin/': {
      id: '/_authenticated/superadmin/'
      path: '/'
      fullPath: '/superadmin/'
      preLoaderRoute: typeof AuthenticatedSuperadminIndexRouteImport
      parentRoute: typeof AuthenticatedSuperadminRoute
    }
    '/_authenticated/superadmin/workspaces': {
      id: '/_authenticated/superadmin/workspaces'
      path: '/workspaces'
      fullPath: '/superadmin/workspaces'
      preLoaderRoute: typeof AuthenticatedSuperadminWorkspacesRouteImport
      parentRoute: typeof AuthenticatedSuperadminRoute
    }
    '/_authenticated/superadmin/users': {
      id: '/_authenticated/superadmin/users'
      path: '/users'
      fullPath: '/superadmin/users'
      preLoaderRoute: typeof AuthenticatedSuperadminUsersRouteImport
      parentRoute: typeof AuthenticatedSuperadminRoute
    }
    '/_authenticated/agents/new': {
      id: '/_authenticated/agents/new'
      path: '/agents/new'
      fullPath: '/agents/new'
      preLoaderRoute: typeof AuthenticatedAgentsNewRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/todos/$id/edit': {
      id: '/_authenticated/todos/$id/edit'
      path: '/todos/$id/edit'
      fullPath: '/todos/$id/edit'
      preLoaderRoute: typeof AuthenticatedTodosIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/agents/$agentId/edit': {
      id: '/_authenticated/agents/$agentId/edit'
      path: '/agents/$agentId/edit'
      fullPath: '/agents/$agentId/edit'
      preLoaderRoute: typeof AuthenticatedAgentsAgentIdEditRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/agents/$agentId/chat': {
      id: '/_authenticated/agents/$agentId/chat'
      path: '/agents/$agentId/chat'
      fullPath: '/agents/$agentId/chat'
      preLoaderRoute: typeof AuthenticatedAgentsAgentIdChatRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/process-document': {
      id: '/api/process-document'
      path: '/api/process-document'
      fullPath: '/api/process-document'
      preLoaderRoute: typeof ApiProcessDocumentServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/health': {
      id: '/api/health'
      path: '/api/health'
      fullPath: '/api/health'
      preLoaderRoute: typeof ApiHealthServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/stripe/webhook': {
      id: '/api/stripe/webhook'
      path: '/api/stripe/webhook'
      fullPath: '/api/stripe/webhook'
      preLoaderRoute: typeof ApiStripeWebhookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/upload': {
      id: '/api/avatars/upload'
      path: '/api/avatars/upload'
      fullPath: '/api/avatars/upload'
      preLoaderRoute: typeof ApiAvatarsUploadServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/delete': {
      id: '/api/avatars/delete'
      path: '/api/avatars/delete'
      fullPath: '/api/avatars/delete'
      preLoaderRoute: typeof ApiAvatarsDeleteServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/avatars/$': {
      id: '/api/avatars/$'
      path: '/api/avatars/$'
      fullPath: '/api/avatars/$'
      preLoaderRoute: typeof ApiAvatarsSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/tools/hubspot/complete': {
      id: '/api/tools/hubspot/complete'
      path: '/api/tools/hubspot/complete'
      fullPath: '/api/tools/hubspot/complete'
      preLoaderRoute: typeof ApiToolsHubspotCompleteServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/tools/hubspot/callback': {
      id: '/api/tools/hubspot/callback'
      path: '/api/tools/hubspot/callback'
      fullPath: '/api/tools/hubspot/callback'
      preLoaderRoute: typeof ApiToolsHubspotCallbackServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/tools/google/complete': {
      id: '/api/tools/google/complete'
      path: '/api/tools/google/complete'
      fullPath: '/api/tools/google/complete'
      preLoaderRoute: typeof ApiToolsGoogleCompleteServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/tools/google/callback': {
      id: '/api/tools/google/callback'
      path: '/api/tools/google/callback'
      fullPath: '/api/tools/google/callback'
      preLoaderRoute: typeof ApiToolsGoogleCallbackServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/agents/$agentId/chat': {
      id: '/api/agents/$agentId/chat'
      path: '/api/agents/$agentId/chat'
      fullPath: '/api/agents/$agentId/chat'
      preLoaderRoute: typeof ApiAgentsAgentIdChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedSuperadminRouteChildren {
  AuthenticatedSuperadminUsersRoute: typeof AuthenticatedSuperadminUsersRoute
  AuthenticatedSuperadminWorkspacesRoute: typeof AuthenticatedSuperadminWorkspacesRoute
  AuthenticatedSuperadminIndexRoute: typeof AuthenticatedSuperadminIndexRoute
}

const AuthenticatedSuperadminRouteChildren: AuthenticatedSuperadminRouteChildren =
  {
    AuthenticatedSuperadminUsersRoute: AuthenticatedSuperadminUsersRoute,
    AuthenticatedSuperadminWorkspacesRoute:
      AuthenticatedSuperadminWorkspacesRoute,
    AuthenticatedSuperadminIndexRoute: AuthenticatedSuperadminIndexRoute,
  }

const AuthenticatedSuperadminRouteWithChildren =
  AuthenticatedSuperadminRoute._addFileChildren(
    AuthenticatedSuperadminRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedBillingRoute: typeof AuthenticatedBillingRoute
  AuthenticatedChatDemoRoute: typeof AuthenticatedChatDemoRoute
  AuthenticatedConnectionsRoute: typeof AuthenticatedConnectionsRoute
  AuthenticatedOnboardingRoute: typeof AuthenticatedOnboardingRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedSelectOrganizationRoute: typeof AuthenticatedSelectOrganizationRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedSuperadminRoute: typeof AuthenticatedSuperadminRouteWithChildren
  AuthenticatedTeamRoute: typeof AuthenticatedTeamRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAgentsNewRoute: typeof AuthenticatedAgentsNewRoute
  AuthenticatedAgentsAgentIdChatRoute: typeof AuthenticatedAgentsAgentIdChatRoute
  AuthenticatedAgentsAgentIdEditRoute: typeof AuthenticatedAgentsAgentIdEditRoute
  AuthenticatedTodosIdEditRoute: typeof AuthenticatedTodosIdEditRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBillingRoute: AuthenticatedBillingRoute,
  AuthenticatedChatDemoRoute: AuthenticatedChatDemoRoute,
  AuthenticatedConnectionsRoute: AuthenticatedConnectionsRoute,
  AuthenticatedOnboardingRoute: AuthenticatedOnboardingRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedSelectOrganizationRoute: AuthenticatedSelectOrganizationRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedSuperadminRoute: AuthenticatedSuperadminRouteWithChildren,
  AuthenticatedTeamRoute: AuthenticatedTeamRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAgentsNewRoute: AuthenticatedAgentsNewRoute,
  AuthenticatedAgentsAgentIdChatRoute: AuthenticatedAgentsAgentIdChatRoute,
  AuthenticatedAgentsAgentIdEditRoute: AuthenticatedAgentsAgentIdEditRoute,
  AuthenticatedTodosIdEditRoute: AuthenticatedTodosIdEditRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
  InviteInvitationIdRoute: InviteInvitationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRoute,
  ApiHealthServerRoute: ApiHealthServerRoute,
  ApiProcessDocumentServerRoute: ApiProcessDocumentServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiAvatarsSplatServerRoute: ApiAvatarsSplatServerRoute,
  ApiAvatarsDeleteServerRoute: ApiAvatarsDeleteServerRoute,
  ApiAvatarsUploadServerRoute: ApiAvatarsUploadServerRoute,
  ApiStripeWebhookServerRoute: ApiStripeWebhookServerRoute,
  ApiAgentsAgentIdChatServerRoute: ApiAgentsAgentIdChatServerRoute,
  ApiToolsGoogleCallbackServerRoute: ApiToolsGoogleCallbackServerRoute,
  ApiToolsGoogleCompleteServerRoute: ApiToolsGoogleCompleteServerRoute,
  ApiToolsHubspotCallbackServerRoute: ApiToolsHubspotCallbackServerRoute,
  ApiToolsHubspotCompleteServerRoute: ApiToolsHubspotCompleteServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
